// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UESAN.Jobs.Infrastructure.Models;

#nullable disable

namespace UESAN.Jobs.Infrastructure.Migrations
{
    [DbContext(typeof(BolsaDeTrabajoContext))]
    [Migration("20230621211556_SQL")]
    partial class SQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Calificaciones", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCalificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCalificacion"));

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    b.Property<int>("IdPostulante")
                        .HasColumnType("int");

                    b.HasKey("IdCalificacion")
                        .HasName("PK__Califica__E056358FC75CD105");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPostulante");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Competencias", b =>
                {
                    b.Property<int>("IdCompetencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompetencia"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("IdCompetencia")
                        .HasName("PK__Competen__DA802ADD4A154480");

                    b.ToTable("Competencias");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.CompetenciasOferta", b =>
                {
                    b.Property<int>("IdCompetenciaOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompetenciaOferta"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int");

                    b.Property<int>("IdOferta")
                        .HasColumnType("int");

                    b.HasKey("IdCompetenciaOferta")
                        .HasName("PK__Competen__65E5E338284A97F8");

                    b.HasIndex("IdCompetencia");

                    b.HasIndex("IdOferta");

                    b.ToTable("CompetenciasOferta");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.CompetenciasPostulante", b =>
                {
                    b.Property<int>("IdCompetenciaPostulante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompetenciaPostulante"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int");

                    b.Property<int>("IdPostulante")
                        .HasColumnType("int");

                    b.HasKey("IdCompetenciaPostulante")
                        .HasName("PK__Competen__5BBD3E385DD888F7");

                    b.HasIndex("IdCompetencia");

                    b.HasIndex("IdPostulante");

                    b.ToTable("CompetenciasPostulante");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("direccion");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("RUC");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telefono");

                    b.HasKey("IdEmpresa")
                        .HasName("PK__Empresa__75D2CED4BE8FBEF3");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Oferta", b =>
                {
                    b.Property<int>("IdOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOferta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferta"));

                    b.Property<string>("Certificados")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certificados");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Creacion");

                    b.Property<string>("Funciones")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("funciones");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    b.Property<string>("Modalidad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modalidad");

                    b.Property<int?>("NumeroPostulantes")
                        .HasColumnType("int")
                        .HasColumnName("numeroPostulantes");

                    b.Property<string>("Puesto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("puesto");

                    b.Property<string>("Requisitos")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("requisitos");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ubicacion");

                    b.HasKey("IdOferta")
                        .HasName("PK__Oferta__05A1245EB4255D90");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.OfertaPostular", b =>
                {
                    b.Property<int>("IdOfertaPostular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOfertaPostular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOfertaPostular"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdOferta")
                        .HasColumnType("int")
                        .HasColumnName("idOferta");

                    b.Property<int?>("IdPostulante")
                        .HasColumnType("int")
                        .HasColumnName("idPostulante");

                    b.HasKey("IdOfertaPostular")
                        .HasName("PK__OfertaPo__2DB5694C2C5ABC94");

                    b.HasIndex("IdOferta");

                    b.HasIndex("IdPostulante");

                    b.ToTable("OfertaPostular");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Postulante", b =>
                {
                    b.Property<int>("IdPostulante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPostulante"));

                    b.Property<string>("Certificados")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certificados");

                    b.Property<string>("Cv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CV");

                    b.Property<string>("Direccion")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("direccion");

                    b.Property<string>("Dni")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("DNI");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPostulante")
                        .HasName("PK__Postulan__D8831F4D6EB73B5E");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Postulante");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6C7EDC659");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Calificaciones", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Empresa", "IdEmpresaNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__idEmp__33D4B598");

                    b.HasOne("UESAN.Jobs.Core.Entities.Postulante", "IdPostulanteNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdPostulante")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__IdPos__34C8D9D1");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdPostulanteNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.CompetenciasOferta", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Competencias", "IdCompetenciaNavigation")
                        .WithMany("CompetenciasOferta")
                        .HasForeignKey("IdCompetencia")
                        .IsRequired()
                        .HasConstraintName("FK__Competenc__IdCom__35BCFE0A");

                    b.HasOne("UESAN.Jobs.Core.Entities.Oferta", "IdOfertaNavigation")
                        .WithMany("CompetenciasOferta")
                        .HasForeignKey("IdOferta")
                        .IsRequired()
                        .HasConstraintName("FK__Competenc__IdOfe__36B12243");

                    b.Navigation("IdCompetenciaNavigation");

                    b.Navigation("IdOfertaNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.CompetenciasPostulante", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Competencias", "IdCompetenciaNavigation")
                        .WithMany("CompetenciasPostulante")
                        .HasForeignKey("IdCompetencia")
                        .IsRequired()
                        .HasConstraintName("FK__Competenc__IdCom__37A5467C");

                    b.HasOne("UESAN.Jobs.Core.Entities.Postulante", "IdPostulanteNavigation")
                        .WithMany("CompetenciasPostulante")
                        .HasForeignKey("IdPostulante")
                        .IsRequired()
                        .HasConstraintName("FK__Competenc__IdPos__38996AB5");

                    b.Navigation("IdCompetenciaNavigation");

                    b.Navigation("IdPostulanteNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Empresa", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("Empresa")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Empresa__idUsuar__398D8EEE");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Oferta", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Empresa", "IdEmpresaNavigation")
                        .WithMany("Oferta")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK__Oferta__idEmpres__3A81B327");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.OfertaPostular", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Oferta", "IdOfertaNavigation")
                        .WithMany("OfertaPostular")
                        .HasForeignKey("IdOferta")
                        .HasConstraintName("idOferta");

                    b.HasOne("UESAN.Jobs.Core.Entities.Postulante", "IdPostulanteNavigation")
                        .WithMany("OfertaPostular")
                        .HasForeignKey("IdPostulante")
                        .HasConstraintName("idPostulante");

                    b.Navigation("IdOfertaNavigation");

                    b.Navigation("IdPostulanteNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Postulante", b =>
                {
                    b.HasOne("UESAN.Jobs.Core.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("Postulante")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Postulant__idUsu__3D5E1FD2");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Competencias", b =>
                {
                    b.Navigation("CompetenciasOferta");

                    b.Navigation("CompetenciasPostulante");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Empresa", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Oferta", b =>
                {
                    b.Navigation("CompetenciasOferta");

                    b.Navigation("OfertaPostular");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Postulante", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CompetenciasPostulante");

                    b.Navigation("OfertaPostular");
                });

            modelBuilder.Entity("UESAN.Jobs.Core.Entities.Usuario", b =>
                {
                    b.Navigation("Empresa");

                    b.Navigation("Postulante");
                });
#pragma warning restore 612, 618
        }
    }
}
